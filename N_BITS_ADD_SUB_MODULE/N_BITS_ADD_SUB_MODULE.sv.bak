module N_BITS_ADD_SUB_MODULE #(parameter BITS = 8) (A, B, Cin, SUB, RESULT, Cout);

	input logic [BITS-1:0] A, B;
	input logic Cin;
	input logic SUB;
	output logic [BITS-1:0] RESULT;
	output logic Cout;
	logic [BITS-1:0] TWO_COMPLEMENT_B, TEMPORAL_RESULT;
	logic TEMPORAL_Cout, ENA_TWO_COMPLEMENT_RESULT, NOT_TEMPORAL_Cout;
	
	TWO_COMPLEMENTER_MODULE #(BITS)
		FIRST_TCM (B, SUB, TWO_COMPLEMENT_B);
		
	ADDER_MODULE #(BITS)
		AM (A, TWO_COMPLEMENT_B, Cin, TEMPORAL_RESULT, TEMPORAL_Cout);

	_NOT
		NOT (TEMPORAL_Cout, NOT_TEMPORAL_Cout);
		
	_AND
		AND (SUB, NOT_TEMPORAL_Cout, ENA_TWO_COMPLEMENT_RESULT);
		
	TWO_COMPLEMENTER_MODULE #(BITS)
		SECOND_TCM (TEMPORAL_RESULT, ENA_TWO_COMPLEMENT_RESULT, RESULT);
		
	assign Cout = TEMPORAL_Cout;
		
endmodule 